---
title: 'A Day in the Life: The BGP Table'
author: Greg Foletta
date: '2024-01-08'
slug: []
categories: []
tags: []
images: []
---
```{r include=FALSE}
library(tidyverse)
library(feasts)
library(tsibble)
library(glue)
library(httr2)
library(gt)
library(tidygraph)
library(ggraph)
library(gganimate)
```


```{r}
# ASN Whois
caida_asn_lookup <- function(asn) {
    asn_info <-
    request("https://api.asrank.caida.org") |>
    req_url_path(glue("/v2/restful/asns/{asn}")) |>
    req_perform() |>
    resp_body_json(simplifyVector = TRUE) 
  
    asn_tbl <- 
    asn_info |> 
      pluck('data', 'asn') |> 
      discard(~is.null(.x)) |> 
      _[c('rank', 'asn', 'asnName', 'source', 'cliqueMember', 'seen', 'longitude', 'latitude', 'organization', 'country')] |> 
      as_tibble() |>
      unnest(c(country, organization)) 
    
    if (is.null(asn_info$data$asn$organization$orgId)) {
        return("")
    }
        
    orgID <- asn_info |> pluck('data', 'asn', 'organization', 'orgId')
   
    org_info <-
    request("https://api.asrank.caida.org") |>
    req_url_path(glue("/restful/organizations/{orgID}")) |>
    req_perform() |>
    resp_body_json(simplifyVector = TRUE) 
   
    org_info |> 
      pluck('data', 'organization', 'orgName') |> 
      as_tibble() |>
      bind_cols(asn_tbl)
}
```
# Let the Yak SHaving Begin


# Updates, Not Routes

```json
{
  "recv_time": 1704483075,
  "id": 12349,
  "type": "UPDATE",
  "nlri": [ "38.43.124.0/23" ],
  "withdrawn_routes": [],
  "path_attributes": [
    {
      "type": "ORIGIN", "type_code": 1,
      "origin": "IGP"
    },
    {
      "type": "AS_PATH", "type_code": 2,
      "n_as_segments": 1,
      "path_segments": [
        {
          "type": "AS_SEQUENCE",
          "n_as": 6,
          "asns": [ 45270, 4764, 2914, 12956, 27951, 23456 ]
        }
      ]
    },
    {
      "type": "NEXT_HOP", "type_code": 3,
      "next_hop": "61.245.147.114"
    },
    {
      "type": "AS4_PATH", "type_code": 17,
      "n_as_segments": 1,
      "path_segments": [
        {
          "type": "AS_SEQUENCE",
          "n_as": 6,
          "asns": [ 45270,4764, 2914, 12956, 27951, 273013 ]
        }
      ]
    }
  ]
}
```


```{r eval=FALSE, include=FALSE}
# We read from the RDS file now
#library(tictoc)
#tic("Start BGP load")
#library(jsonlite)
#bgp <- fromJSON('data/full_table_5_transform_day.zip')
#toc("End BGP load")
```


```{r include=FALSE}
# This reads in our RDS file.
 bgp <- read_rds('data/full_table.rds.gz')
```

```{r warning=FALSE, include=FALSE}
# This section cleans and adds some columns
bgp <-
    bgp %>%  
    mutate(
        recv_time = as.POSIXct(recv_time),
        # bgpsee wasn't parsing IPv6 at the time, but we could see the NLRI path attribute
        ip_version = map_chr(path_attributes, ~{ if_else(any(.x$type == "MP_REACH_NLRI" | .x$type == "MP_UNREACH_NLRI"), 'v6', 'v4') }),
        # Is this an update with purely withdrawn routes?
        pure_withdraw = 
            ( map_lgl(withdrawn_routes, ~{ length(.x) > 0 }) & map_lgl(nlri, ~{ length(.x) == 0 }) ) | 
            ( map_lgl(path_attributes, ~{ any(.x$type == "MP_UNREACH_NLRI") & !any(.x$type == "MP_REACH_NLRI") }) ),
        # Number of routes in the update 
        n_routes = map_int(nlri, ~length(.x)),
        address_space = map_dbl(nlri, ~{ 
            n <- .x |> str_extract("/(\\d+)", group = TRUE) |> as.integer()
            2^(32 - n) |> sum() |> log2()
        })
    ) %>% 
    # For each IPv4/IPv6, is this in the inistal send period where we get the big chunk of updates?
    group_by(ip_version) %>% 
    mutate(initial_send = recv_time - first(recv_time) < 30) %>% 
    ungroup()
```

```{r echo=FALSE}
# This creates a table which shows each message and the NLRI (adv/withdrawn)
bgp |>
    filter(!initial_send) |> 
    head() |> 
    select(-c(ip_version, pure_withdraw, n_routes, address_space, initial_send)) |> 
    mutate(
        nlri = map_chr(nlri, ~paste0(.x, collapse = "\n")),
        withdrawn_routes = map_chr(withdrawn_routes, ~paste0(.x, collapse = ", "))
    ) |>
    gt() |>
    opt_interactive()
```

```{r echo=FALSE}
# Here we take a sample of some of of the updates and show the path attributes associated with them.
bgp |>
    filter(!initial_send) |> 
    slice_head(n = 1) |> 
    select(id, path_attributes) |>
    unnest(path_attributes) |>
    mutate(
        flags = map_chr(flags, ~paste(.x, collapse = ', '))
    ) |>
    select(-c(flags_low_nibble, n_as_segments, n_total_as)) |>
    mutate(
        path_segments = map_chr(path_segments, ~{ paste( c(.x$type, .x$asns), collapse = ' ') })
    ) |>
    pivot_longer(c(origin, path_segments, next_hop)) |>
    select(-name) |> 
    filter(!(is.na(value) | value == "")) |>
    gt() |>
    opt_interactive()
```


```{r}
# This pulls the as path up into the top level as a column, and also adds the 'originating_asn' 
# as a column
 bgp <-
    bgp |> 
    unnest(path_attributes, names_sep = '.') |> 
    # Get AS4_PATH if it exists, otherwise get AS_PATH
    filter(path_attributes.type %in% c('AS_PATH', 'AS4_PATH')) |>
    group_by(id) |>
    slice_tail(n = 1) |>
    ungroup() |> 
    select(id, path_attributes.path_segments) |>
    unnest(path_attributes.path_segments) |>
    unnest(asns) |>
    # Concatenate the al path segments into one list 
    group_by(id) |>
    summarise(as_path = list(asns)) |> 
    ungroup() |> 
    # Joint back with original tibble
    right_join(bgp, by = 'id') |> 
    # Pull out the last (originating) AS as a separate column
    mutate(
        originating_asn = map_int(as_path, ~{ 
            if (is.null(.x)) { return(NA_integer_) }
            n = length(.x)
            .x[[n]] 
        }),
        as_path_len = map_int(as_path, ~length(.x))
    )
```

# Initial Send, Number of v4 and v6 Paths

```{r}
bgp |> 
    filter(initial_send) |> 
    group_by(ip_version) |> 
    count(recv_time) |>
    summarise(paths = sum(n)) |>
    ggplot() +
    geom_col(aes(ip_version, paths, fill = ip_version)) +
    labs(
        title = 'Initial Send of BGP Paths',
        subtitle = 'IPv4 and IPv6',
        fill = 'IP Version',
        x = 'IP Version',
        y = 'Paths'
    ) +
    scale_y_continuous(labels = scales::comma)
```

Number of routes is `r bgp |> filter(initial_send & ip_version == 'v4') |> select(id, n_routes) |> summarise(routes = sum(n_routes))`. [Geoff's data](https://bgp.potaroo.net/as2.0/bgp-active.txt) shows 942,594

# Updates Over Time

```{r message=FALSE, warning=FALSE}

{ bgp |> 
    filter(!initial_send & ip_version == 'v4') |> 
    count(recv_time = floor_date(recv_time, unit = '5 minutes')) |>
    mutate(mean_n = mean(n)) |> 
    ggplot(aes(recv_time, n)) +
    geom_line(size = .3) +
    geom_hline(aes(yintercept = mean_n), linetype = 2) +
    transition_reveal(recv_time) +  
    scale_x_datetime() +
    coord_cartesian(clip = 'off') +
    labs(
      title = "BGP v4 Path Advertisements Over Time",
      subtitle = "Dashed Line: Mean, Time: {floor_date(frame_along, '1 minute')}",
      x = "Time",
      y = "Number of Paths Advertised"
    ) } |> animate(renderer = gifski_renderer()) 
```
```{r}
bgp |> 
    filter(!initial_send & ip_version == 'v4') |> 
    count(recv_time = floor_date(recv_time, unit = '5 minutes')) |>
    ggplot() +
    geom_histogram(aes(n), binwidth = 5, ) +
    geom_density(aes(n), )
```
```{r}
bgp |> 
    filter(!initial_send & ip_version == 'v4') |>
    add_count(recv_time = floor_date(recv_time, unit = '5 minutes')) |>
    slice_max(order_by = n, n = 1) |>
    unnest(asn = as_path) |>
    count(asn, sort = TRUE) |>
    slice_head(n = 10) |>
    mutate(as_info = map(asn, ~caida_asn_lookup(.x))) |>
    select(n, as_info) |>
    unnest(as_info) |>
    select(n, organisation = value, asn, source, country) |>  
    gt() |>  
    opt_interactive()
```

# Prepending Madness

```{r}
bgp |>
    group_by(ip_version) |> 
    slice_max(order_by = as_path_len, n = 50, with_ties = FALSE) |>
    mutate(order = row_number()) |>
    ungroup() |> 
    ggplot() +
    geom_col(aes(order, as_path_len, fill = ip_version)) +
    facet_grid(vars(ip_version)) 
```
```{r}
bgp |>
    filter(ip_version == 'v4') |>
    slice_max(order_by = as_path_len, n = 1) |>
    pluck('as_path', 1) |>
    paste(collapse = ' ')
```

Someone at asn 45270, 'Dinas Komunikasi dan Informatika Kabupaten Tulungagung' out of Indonesia, really wanted the NLRI '103.179.250.0/24' to be less preferable. 

```{r}
bgp |>
    filter(ip_version == 'v4') |>
    unnest(nlri) |>
    filter(nlri == '103.179.250.0/24') |>
    slice_tail() |> 
    select(id, as_path, recv_time, type, nlri) |>
    gt() |>
    opt_interactive()
```


```{r}
bgp |>
    filter(ip_version == 'v6') |>
    slice_max(order_by = as_path_len, n = 1) |>
    pluck('as_path', 1) |>
    paste(collapse = ' ')
```

This time we've got what appears to be transit provider asn8772 (NetAssist LLC), prepending to make paths to asn203868 (Rifqi Arief Pamungkas, again out of Indonesia)

# Path Attributes

```{r}
bgpv4_attr <-
    bgp |>
    filter(ip_version == 'v4') |> 
    unnest(path_attributes, names_sep = '.')
```


```{r}
bgpv4_attr |>
    #filter(!path_attributes.type_code %in% c(1,2,3)) |>
    mutate(pa = glue('{path_attributes.type} ({path_attributes.type_code})')) |>
    count(pa) |>
    mutate(pa = fct_reorder(pa, n)) |> 
    ggplot() +
    geom_col(aes(pa, log(n))) +
    geom_label(aes(pa, log(n), label = n), nudge_y = -.2) +
    coord_flip()
```
```{r}
 bgpv4_attr |>
    filter(path_attributes.type_code == 255) |>
    distinct(originating_asn) |>
    mutate(organisation = map_df(originating_asn, ~caida_asn_lookup(.x))) |>
    unnest(organisation) |>
    select(originating_asn, organisation = value, source, country)
```

# Flippy-Flappy: Who's Having a Bad Time?

```{r}
bgp |>
    unnest(nlri) |>
    count(nlri) |>
    slice_max(n, n = 50) |>
    gt() |> 
    opt_interactive()
```


```{r}
bind_rows(
    bgp |> unnest(withdrawn_routes) |> filter(withdrawn_routes == '140.99.244.0/23') |> select(-nlri),
    bgp |> unnest(nlri) |> filter(nlri == '140.99.244.0/23') |> select(-withdrawn_routes)
) |> select(id, recv_time, withdrawn_routes, nlri) |>
    mutate(type = if_else(is.na(withdrawn_routes), 'UPDATE', 'WITHDRAW')) |>
    select(id, recv_time, type) |>
    group_by(type) |>
    mutate(n = row_number()) |>
    ungroup() |>
    ggplot() +
    geom_point(aes(recv_time, n, colour = type), size = .5) +
    facet_grid(vars(type), scales = 'free_y')
```

```{r}
bgp |> unnest(withdrawn_routes) |> filter(withdrawn_routes == '140.99.244.0/23')
```

