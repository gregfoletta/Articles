---
title: Git Under the Hood
author: 'Greg Foletta'
date: '2022-03-19'
slug: git-under-the-hood
categories: [git]
---

```{zsh}
touch file_x
rm -rf .git file_* subdir
```

```{r}
library(tidyverse)
library(tidygraph)
library(ggraph)
library(git2r)
library(stringr)
library(glue)
```

# Init and Cleaning

```{zsh}
git init -q
rm -rf .git/{hooks,info,config,branches,description}
rm -rf .git/objects/{info,pack}
rm -rf .git/refs/{heads,tags}

tree -n .git
```


# Blobs

```{zsh}
echo "Hello" > file_x
git add file_x

tree -n .git
```

```{zsh}
pigz -cd .git/objects/e9/65047ad7c57865823c7d992b1d046ea66edf78 | hexdump -C
```

```{zsh}
echo "blob 6\0Hello" | shasum
```

```{zsh}
mkdir subdir

echo "Hello Again" > subdir/file_y
echo "Hello" > subdir/file_z

git add subdir

tree -n .git
```
```{r}
tbl_graph(
    nodes = odb_objects() %>% select(sha),
    edges = tibble(to = c(1,2), from = c(1,2))
) %>%
    mutate(x = c(-1, 1), y = c(0, 0))
```

```{r}
tbl_graph(
    nodes = odb_objects() %>% select(sha),
    edges = tibble(to = c(1,2), from = c(1,2))
) %>%
    mutate(x = c(-1, 1), y = c(0, 0)) %>% 
    ggraph(x = x, y = y) +
    geom_node_point(size = 30, colour = 'steelblue') +
    geom_node_text(aes(label = str_sub(sha, end = 8)), colour = 'white') +
    labs(
        title = 'Blob Objects'
    ) +
    xlim(-4, 4) +
    ylim(-4, 4)
    
    
    #ggraph() +
    #geom_node_point(size = 40, colour = 'steelblue') +
    #geom_node_label(aes(label = sha))
```

# Tree

```{zsh}
git commit -m "Initial Commit"

tree -n .git
```

```{zsh}
pigz -cd .git/objects/2b/04fd32b556e89dfa44b332f0cc59541879189a | hexdump -C
```

```{zsh}
cat .git/objects/2b/04fd32b556e89dfa44b332f0cc59541879189a |\
pigz -d |\
perl -nE 'print join "\n", unpack("Z*(Z*H40)*")'
```

```{zsh}
pigz -cd .git/objects/44/9a4c7ba21764840c8abc1eb9698596fdf33f3d |\
perl -nE 'print join "\n", unpack("Z*(Z*H40)*")'
```



```{r}
# All git objects
git_object_nodes <- 
    odb_objects()

# Pull out tree objects, run ls_tree to list what they
# point to which becomes out edges
git_object_edges <-
    odb_objects() %>% 
    filter(type == 'tree') %>% 
    mutate(blobs = map(sha, ~ls_tree(.x, recursive = FALSE))) %>%
    unnest(blobs, names_repair = 'universal') %>%
    select(
        from = sha...1,
        to = sha...6,
    )


tbl_graph(
    nodes = git_object_nodes,
    edges = git_object_edges
) %>%
    filter(type != 'commit') %>% 
    ggraph(layout = 'kk') +
    geom_node_point(aes(colour = type), size = 10) +
    geom_edge_link(arrow = arrow(type = 'closed', length = unit(4, units = 'mm'))) +
    geom_node_label(aes(label = glue("{type}\n{str_sub(sha, end = 8)}")), nudge_y = -.14)
``` 


```{r}
# Test graph structure
tbl_graph(
    nodes = tibble(nodes = c('a', 'b', 'c'), type = c('Good', 'Good', 'Bad')),
    edges = tibble(from = c('a', 'c', 'b'), to = c('b', 'b', 'c'))
) %>%
    ggraph(layout = 'kk') +
    geom_node_point(aes(colour = type), size = 30) +
    geom_edge_bend(arrow = arrow(ends = 'last', type = 'closed')) +
    geom_node_text(aes(label = nodes), size = 10,)
```


# Commit

```{zsh}
COMMIT_DIR=$(git show HEAD --pretty=format:"%H" --no-patch | cut -c 1-2)
COMMIT_OBJ=$(git show HEAD --pretty=format:"%H" --no-patch | cut -c 3-)

pigz -cd .git/objects/$COMMIT_DIR/$COMMIT_OBJ |
perl -0777 -nE 'print join "\n", unpack("Z*A*")'
```

# Branch

```{zsh}
cat .git/HEAD
cat .git/refs/heads/master


```

# Index
```{zsh}
perl -MData::Dumper -0777 -nE '
my @index = unpack("A4 H8 N/(N4 N2 B16 B16 N N N H40 B8 W/A B16 x![4])");
say join(" ", @index[ ($_ * 15) + 2 ..  ($_ * 15) + 17])  foreach (0 .. (scalar (@index - 2) / 15) - 1)
' .git/index
```



```{zsh include=FALSE}
rm -rf .git file_* subdir
```

