---
title: BOM
author: 'Greg Foletta'
date: '2024-08-15'
slug: []
categories: []
tags: []
images: []
---



```{r}
library(tidyverse)
library(httr2)
```




```{r read_in_data}
current_temps <- request("sftp://hastings/~/bom_data/current_temps.csv") |>
    req_perform() |>
    resp_body_raw() |>
    read_csv() |>
    # Change timezone from UTC
    mutate(
        request_time = with_tz(request_time, "Australia/Melbourne"),
        floor_request_time = floor_date(request_time, '5 mins')
    ) 
```

```{r}
forecast_temps <- request("sftp://hastings/~/bom_data/forecast_temps.csv") |>
    req_perform() |>
    resp_body_raw() |>
    read_csv() |> 
    # Change timezone from UTC
    mutate(
        request_time = with_tz(request_time, "Australia/Melbourne"),
        forecast_time = force_tz(forecast_time, "Australia/Melbourne"),
        floor_request_time = floor_date(request_time, '5 mins')
    )
```

```{r current_temps}
current_temps |>
    ggplot(aes(request_time, current_temp, colour = location)) +
    geom_line() 
```

```{r forecast_temps}
forecast_temps |> 
    ggplot(aes(forecast_time, forecast_temp, colour = location)) +
    geom_line()
```
# Model Changes

```{r}
forecast_temps |>
    arrange(location, forecast_time, request_time) |> 
    group_by(forecast_time, location) |>
    mutate(
        model_change = forecast_temp != lag(forecast_temp) 
    ) |>
    ungroup() |>
    mutate(time_difference = forecast_time - request_time) |>
    filter(time_difference > 0 & model_change) |>  
    ggplot() +
    geom_histogram(aes(time_difference, fill = location), binwidth = 60 * 60 * 2) +
    facet_grid(vars(location))
```



```{r}
forecast_current_joined <-
    forecast_temps |>
    # Join on location, and whe forecast time matches the 5 minute floored 
    # request time of the current observation
    left_join(
        current_temps, by = c('forecast_time' = 'floor_request_time', 'location'),
        relationship = 'many-to-many',
        suffix = c('_forecast', '_current')
    ) |>
    # Drop rows that are in the future and for which we don't have a current temp yet
    drop_na(current_temp) |> 
    mutate(
        time_difference = forecast_time - floor_request_time,
        temp_difference = current_temp - forecast_temp
    ) |> 
    # Filter out "past forecasts"
    filter(time_difference > 0) |>
    # Clean up columns
    select(forecast_time, location, request_time_current, time_difference, forecast_temp, current_temp, temp_difference) |>
    arrange(desc(forecast_time))
```


# Looking

```{r}
forecast_current_joined |>
    filter(time_difference == minutes(5)) |>
    ggplot() +
    geom_line(aes(forecast_time, forecast_temp, color = '5 minute forecast')) +
    geom_point(aes(forecast_time, forecast_temp, color = '5 minute forecast')) +
    geom_line(aes(forecast_time, current_temp, colour = location)) +
    geom_point(aes(forecast_time, current_temp, colour = location)) +
    facet_grid(vars(location))
```

```{r}
forecast_current_joined |>
    filter(time_difference == hours(12)) |>
    ggplot() +
    geom_hline(aes(yintercept = 0), size = .3) +
    geom_line(aes(forecast_time, temp_difference, colour = location)) +
    geom_point(aes(forecast_time, temp_difference, colour = location)) +
    facet_grid(vars(location))
```
```{r}
forecast_current_joined |>
    filter(time_difference == minutes(5)) |>
    ggplot() +
    geom_histogram(aes(temp_difference, fill = location), binwidth = .1) +
    geom_vline(aes(xintercept = 0), size = .3) +
    facet_grid(vars(location))
```

```{r}
forecast_current_joined |>
    filter(time_difference == days(5)) |>
    ggplot() +
    geom_line(aes(forecast_time, forecast_temp, color = '7 day forecast')) +
    geom_line(aes(forecast_time, current_temp, colour = location)) +
    facet_grid(vars(location))
```



```{r}
forecast_current_joined |>
    filter(time_difference == days(5)) |>
    ggplot() +
    geom_line(aes(forecast_time, temp_difference, colour = location)) +
    facet_grid(vars(location))
```



```{r}
forecast_current_joined |>
    ggplot() +
    geom_point(aes(time_difference, temp_difference, colour = location), size = .1, alpha = .02) +
    facet_grid(vars(location)) +
    scale_x_continuous() +
    guides(color = guide_legend(override.aes = list(size = 3, alpha = 1))) +
    labs(
        colour = "Location",
        x = "Time To Forecast (Seconds)",
        y = "Temperature Difference (C)"
    )
```

