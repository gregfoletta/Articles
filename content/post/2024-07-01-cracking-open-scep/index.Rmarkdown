---
title: Cracking Open SCEP
author: ''
date: '2024-07-01'
slug: []
categories: [Shell PKI]
tags: []
images: []
---

Most of the articles on this site are long form, taking months to put together. In fact the the radio silence over the past nine months is because I've had two in draft form, and haven't quite been able to get them across the line.

As an antidote to this I've put together something a little more bite-size. In this post we're going to crack open a *Simple Certificate Enrollment Protocol (SCEP)* request. We'll do this on the command line, using the openssl tool peer underneath the hood.

# The Request

Here's a screenshot of a packet capture taken during a SCEP request for a new certificate.

![SCEP Capture](scep_capture.png)

The SCEP request is actually two requests: the first returns an X509 CA certificate, and the second is the certificate request. Zooming in on the second one, the bulk of the request is passed in the *message* query parameter. I've extracted the value of this parameter into a file named *scep_message*. Let's take a look at the size and the first 64 bytes.

```{sh}
# Size in bytes
wc -c scep_message
# First 64 bytes
cut -c1-64 scep_message 
```

As you'll soon see, SCEP has an onion like quality (often including the tears), with layer after layer of different encodings and structures. The request is first URI encoded, then base64 encoded, so we remove those and store what I'll call the 'raw' SCEP in a file called, strangely, *scep_raw*.

```{sh}
# Remove the URI and base64 encoding
< scep_message perl -MURI::Escape -e 'print uri_unescape(<STDIN>)' | base64 -d > scep_raw
```

Now we start to get to the meat and bones. The first wrapper is a [Cryptographic Message Syntax](https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax) that provides verification of the request. The below command prints out the structure, which I've edited for brevity and added comments to:

```{sh}
# Print the CMS structure
openssl cms -in scep_raw -cmsout -inform DER -print
```


```{sh}
< scep_raw openssl cms -verify -noverify -in - -inform DER |
  openssl cms -inform DER -cmsout -print
```

```{sh}
< scep_raw openssl cms -verify -noverify -in - -inform DER -out - |
  openssl cms -inform DER -decrypt -recip Blog_Post_SubCA.key |
  openssl req -inform DER -noout -text
```

# Response

